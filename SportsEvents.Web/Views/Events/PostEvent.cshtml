@model SportsEvents.Web.ViewModels.PostEventViewModel

@{
    ViewBag.Title = "title";
}

<h2>Post A New Event</h2>
<hr />
<div class="panel well-lg row radios">

    <label class="col-md-2 radio-inline">

        <input type="radio" checked="checked" name="IsReoccuring" /> One Time Event
    </label>
    <label class="col-md-2 radio-inline">


        <input type="radio"  name="IsReoccuring" /> Reoccuring Event
    </label>


</div>


<div class="well">
    @using (Html.BeginForm("PostEvent", "Events", FormMethod.Post, new { @class = "form-horizontal row", role = "form", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="panel col-md-12 panel-default">
            <div class="page-header">
                Event Details
            </div>
            <div class="panel-body">
                <div class="form-group">
                    <div class="col-md-6">
                        @Html.LabelFor(m => m.Title, new { @class = "control-label" })
                        <div>
                            @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="horizontal-group">
                    <div class="form-group col-md-3">
                        @Html.LabelFor(m => m.SportId, new { @class = "control-label" })
                        <div>
                            @Html.DropDownListFor(m => m.SportId, new SelectList(Model.Sports, "Id", "Name"), "--- Select Sport ---", new { @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(m => m.SportId, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-3">
                        @Html.LabelFor(m => m.EventTypeId, new { @class = "control-label" })
                        <div>
                            @Html.DropDownListFor(m => m.EventTypeId, new SelectList(Model.EventTypes, "Id", "Name"), "--- Select Event Type ---", new { @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(m => m.EventTypeId, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(m => m.Price, new { @class = "control-label" })
                        <div>
                            @Html.TextBoxFor(m => m.Price, new { @class = "form-control", type = "number", step = "0.01" })
                        </div>
                        @Html.ValidationMessageFor(m => m.Price, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-9">
                        @Html.LabelFor(m => m.Description, new { @class = "control-label" })
                        <div>
                            @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="horizontal-group">
                    <div class="form-group col-md-3">
                        @Html.LabelFor(m => m.BeginDate, new { @class = "control-label" })
                        <div>
                            @Html.TextBoxFor(m => m.BeginDate, new { @class = "form-control", type = "date", value = DateTime.Now })
                        </div>
                        @Html.ValidationMessageFor(m => m.BeginDate, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-3">
                        @Html.LabelFor(m => m.EndDate, new { @class = "control-label" })
                        <div>
                            @Html.TextBoxFor(m => m.EndDate, new { @class = "form-control", type = "date", value = DateTime.Now })
                        </div>
                        @Html.ValidationMessageFor(m => m.EndDate, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(m => m.BeginTime, new { @class = "control-label" })
                        <div>
                            @Html.TextBoxFor(m => m.BeginTime, new { @class = "form-control", type = "time", value = DateTime.Now })
                        </div>
                        @Html.ValidationMessageFor(m => m.BeginTime, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(m => m.EndTime, new { @class = "control-label" })
                        <div>
                            @Html.TextBoxFor(m => m.EndTime, new { @class = "form-control", type = "time", value = DateTime.Now })
                        </div>
                        @Html.ValidationMessageFor(m => m.EndTime, "", new { @class = "text-danger" })
                    </div>
                    <input type="checkbox" hidden name="IsReoccuring" />
                </div>
            </div>
        </div>
        <div class="panel col-md-12 panel-default">
            <div class="page-header">
                Event Location
            </div>
            <div class="panel-body">
                <div class="form-group">
                    <div class="col-md-7">
                        @Html.LabelFor(m => m.AddressLineOne, new { @class = "control-label" })
                        <div>
                            @Html.TextBoxFor(m => m.AddressLineOne, new { @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(m => m.AddressLineOne, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-7">
                        @Html.LabelFor(m => m.AddressLineTwo, new { @class = "control-label" })
                        <div>
                            @Html.TextBoxFor(m => m.AddressLineTwo, new { @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(m => m.AddressLineTwo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(m => m.CountryId, new { @class = "control-label" })
                        <div>
                            @Html.DropDownListFor(m => m.CountryId, new SelectList(Model.Countries, "Id", "Name"), "--- Select Country ---", new { @class = "form-control", id = "country" })
                        </div>
                        @Html.ValidationMessageFor(m => m.CountryId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(m => m.CityId, new { @class = "control-label" })
                        <div>
                            @Html.DropDownListFor(m => m.CityId, new SelectList(Model.Cities, "Id", "Name"), "--- Select City ---", new { @class = "form-control", id = "city", disabled = "disabled" })
                        </div>
                        @Html.ValidationMessageFor(m => m.CityId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(m => m.Zip, new { @class = "control-label" })
                        <div>
                            @Html.TextBoxFor(m => m.Zip, new { @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(m => m.Zip, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="panel col-md-12 panel-default">
            <div class="page-header">
                Event Related Media
            </div>
            <div class="panel-body">
                <div class="form-group">

                    <div class="col-md-5">
                        @Html.LabelFor(m => m.Icon, new { @class = "control-label" })
                        <div>
                            @Html.TextBoxFor(m => m.Icon, new { @class = "form-control", type = "file", accept = "image/*" })
                        </div>
                        @Html.ValidationMessageFor(m => m.Icon, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">

                    <div class="col-md-5">
                        @Html.LabelFor(m => m.Pictures, new { @class = "control-label" })
                        <div>
                            @Html.TextBoxFor(m => m.Pictures, new { @class = "form-control", type = "file", accept = "image/*", multiple = "multiple" })
                        </div>
                        @Html.ValidationMessageFor(m => m.Pictures, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">

                    <div class="col-md-5">
                        @Html.LabelFor(m => m.VideoLink, new { @class = "control-label" })
                        <div>
                            @Html.TextBoxFor(m => m.VideoLink, new { @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(m => m.VideoLink, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">

                    <div class="col-md-5">
                        @Html.LabelFor(m => m.SocialMediaLink, new { @class = "control-label" })
                        <div>
                            @Html.TextBoxFor(m => m.SocialMediaLink, new { @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(m => m.SocialMediaLink, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-5 col-md-3">
                <input type="submit" class="btn btn-lg" value="Post" />
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/reg")
}